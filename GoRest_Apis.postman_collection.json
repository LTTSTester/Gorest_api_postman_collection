{
	"info": {
		"_postman_id": "4bf5bf7d-dae2-45ef-8189-bf71c04fd49d",
		"name": "GoRest_Apis",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22371436"
	},
	"item": [
		{
			"name": "Create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=JSON.parse(responseBody);\r",
							"pm.environment.set(\"userid_env\", jsonData.id);\r",
							"\r",
							"//status code verification\r",
							"pm.test(\"Staus Code is 201\", ()=>\r",
							"{\r",
							"pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//Status is Created \r",
							"pm.test(\"Staus is Created \",()=>\r",
							"{\r",
							"pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"//pm.environment.unset(\"email_rnd\");\r",
							"//pm.environment.unset(\"name_rnd\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomval=Math.random().toString(36).substring(2);\r",
							"\r",
							"var rndemail=randomval+\"@mailnesia.com\";\r",
							"var rndname=randomval;\r",
							"\r",
							"//set the environment variable \r",
							"pm.environment.set(\"username_env\", rndname);\r",
							"pm.environment.set(\"useremail_env\", rndemail);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"{{username_env}}\", \r\n\"gender\":\"male\",\r\n \"email\":\"{{useremail_env}}\", \r\n \"status\":\"inactive\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_host}}/public/v2/users",
					"host": [
						"{{url_host}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//status code verification\r",
							"pm.test(\"Staus Code is 200\", ()=>\r",
							"{\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Status is Created \r",
							"pm.test(\"Staus is Ok \",()=>\r",
							"{\r",
							"pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"//validating the json Field in the response\r",
							"pm.test(\"Validating the json field in the response\", ()=>{\r",
							"var jsonData=pm.response.json();\r",
							"pm.expect(jsonData.id).to.eql(pm.environment.get(\"userid_env\"));\r",
							"pm.expect(jsonData.name).to.eql(pm.environment.get(\"username_env\"));\r",
							"pm.expect(jsonData.email).to.eql(pm.environment.get(\"useremail_env\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_host}}/public/v2/users/{{userid_env}}",
					"host": [
						"{{url_host}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userid_env}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update the user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"\r",
							"//status code verification\r",
							"pm.test(\"Staus Code is 200\", ()=>\r",
							"{\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Status is Created \r",
							"pm.test(\"Staus is OK \",()=>\r",
							"{\r",
							"pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"//pm.environment.unset(\"username\");\r",
							"//pm.environment.unset(\"useremail\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomval=Math.random().toString(36).substring(2);\r",
							"\r",
							"var rndemail=randomval+\"@mailnesia.com\";\r",
							"var rndname=randomval;\r",
							"\r",
							"//set the environment variable \r",
							"pm.environment.set(\"username_env\", rndname);\r",
							"pm.environment.set(\"useremail_env\", rndemail);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"{{username_env}}\", \r\n \"email\":\"{{useremail_env}}\", \r\n \"status \": \"active\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_host}}/public/v2/users/{{userid_env}}",
					"host": [
						"{{url_host}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userid_env}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Details after the update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//status code verification\r",
							"pm.test(\"Staus Code is 200\", ()=>\r",
							"{\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Status is Created \r",
							"pm.test(\"Staus is Ok \",()=>\r",
							"{\r",
							"pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validating the json field post updation \",()=>{\r",
							"   var jsonData= pm.response.json();\r",
							"pm.expect(jsonData.id).to.eql(pm.environment.get(\"userid_env\"));\r",
							"pm.expect(jsonData.name).to.eql(pm.environment.get(\"username_env\"));\r",
							"pm.expect(jsonData.email).to.eql(pm.environment.get(\"useremail_env\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_host}}/public/v2/users/{{userid_env}}",
					"host": [
						"{{url_host}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userid_env}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//status code verification\r",
							"pm.test(\"Staus Code is 204\", ()=>\r",
							"{\r",
							"pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"//Status is Created \r",
							"pm.test(\"Staus is No Content \",()=>\r",
							"{\r",
							"pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							"\r",
							"pm.environment.unset(\"userid_env\");\r",
							"pm.environment.unset(\"username_env\");\r",
							"pm.environment.unset(\"useremail_env\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_host}}/public/v2/users/{{userid_env}}",
					"host": [
						"{{url_host}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userid_env}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "bab047b29dd6cdfce0c707d8397c1aff2749b19a4a2f83c0f383f70e3bb0aa67",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url_host",
			"value": "https://gorest.co.in",
			"type": "string"
		}
	]
}